{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lkn4/OneDrive%20-%20University%20of%20Illinois%20-%20Urbana/Desktop/campus-dashboard/frontend/pages/professors/%5Bslug%5D.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useRouter } from \"next/router\";\r\nimport { useEffect, useState } from \"react\";\r\nimport classesData from \"../../data/raw/classes.json\";\r\nimport mergedProfessors from \"../../data/processed/merged_professors.json\";\r\n\r\n// Normalize a string: lowercase, remove periods, normalize spaces, trim\r\nconst normalize = (name: string) =>\r\n  name.toLowerCase().replace(/\\./g, \"\").replace(/\\s+/g, \" \").trim();\r\n\r\nexport default function ProfessorProfile() {\r\n  const router = useRouter();\r\n  const { slug } = router.query;\r\n\r\n  const [professorSlug, setProfessorSlug] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (typeof slug === \"string\") {\r\n      setProfessorSlug(slug);\r\n    }\r\n  }, [slug]);\r\n\r\n  if (!professorSlug) {\r\n    return (\r\n      <p\r\n        style={{\r\n          padding: \"24px\",\r\n    marginTop: \"80px\", // ðŸ‘ˆ prevents overlap with navbar\r\n    maxWidth: \"800px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n        fontFamily: \"'Poppins', sans-serif\",\r\n        color: \"#ffffffff\",\r\n        background:\r\n          \"#1b196bff\",\r\n        borderRadius: \"20px\",\r\n        }}\r\n      >\r\n        Loading...\r\n      </p>\r\n    );\r\n  }\r\n\r\n  // Find classes taught by professor and accumulate grades\r\n  let totalGrades = 0;\r\n  let gradeCount = 0;\r\n  const classList: { code: string; name: string; avggrade: number }[] = [];\r\n\r\n  for (const cls of classesData) {\r\n    const prof = cls.professors.find((p) => p.prof === professorSlug);\r\n    if (prof && typeof prof.avggrade === \"number\") {\r\n      totalGrades += prof.avggrade;\r\n      gradeCount++;\r\n      classList.push({\r\n        code: cls.code,\r\n        name: cls.name,\r\n        avggrade: prof.avggrade,\r\n      });\r\n    }\r\n  }\r\n\r\n  const avgGrade = gradeCount > 0 ? totalGrades / gradeCount : null;\r\n\r\n  // Parse the slug to extract last and first names\r\n  const [lastName, firstRaw = \"\"] = professorSlug.split(\",\");\r\n  const normalizedLast = normalize(lastName);\r\n  const normalizedFirst = normalize(firstRaw.split(\" \")[0] || \"\");\r\n\r\n  // Find matching RateMyProfessors data\r\n  const rmpProf = mergedProfessors.find((p) => {\r\n    const match =\r\n      normalize(p.lastName) === normalizedLast &&\r\n      normalize(p.firstName).startsWith(normalizedFirst);\r\n    if (match) {\r\n      console.log(`âœ… RMP match found for: ${professorSlug}`);\r\n    }\r\n    return match;\r\n  });\r\n\r\n  return (\r\n    <main\r\n      className=\"p-6 max-w-4xl mx-auto rounded-lg\"\r\n      style={{\r\n        padding: \"24px\",\r\n        marginTop: \"80px\",\r\n        maxWidth: \"800px\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        fontFamily: \"'Poppins', sans-serif\",\r\n        color: \"#ffffffff\",\r\n        background: \"#1b196bff\",\r\n        borderRadius: \"20px\",\r\n      }}\r\n    >\r\n      <h1\r\n        style={{\r\n          fontSize: \"32px\",\r\n          fontWeight: \"800\",\r\n          marginBottom: \"16px\",\r\n          color: \"#ddd6fe\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        {professorSlug}\r\n      </h1>\r\n\r\n      <p\r\n        style={{\r\n          fontSize: \"18px\",\r\n          fontWeight: \"600\",\r\n          marginBottom: \"20px\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <strong>Average GPA Across Classes: </strong>\r\n        {avgGrade !== null ? avgGrade.toFixed(2) : \"N/A\"}\r\n      </p>\r\n\r\n      {rmpProf ? (\r\n        rmpProf.avgRating == null &&\r\n        rmpProf.avgDifficulty == null &&\r\n        rmpProf.wouldTakeAgainPercent == null &&\r\n        rmpProf.numRatings == null ? (\r\n          <p\r\n            style={{\r\n              fontSize: \"16px\",\r\n              fontStyle: \"italic\",\r\n              textAlign: \"center\",\r\n              marginBottom: \"28px\",\r\n            }}\r\n          >\r\n            No RateMyProfessors data available.\r\n          </p>\r\n        ) : (\r\n          <section\r\n            style={{\r\n              marginBottom: \"32px\",\r\n              backgroundColor: \"rgba(255 255 255 / 0.12)\",\r\n              padding: \"20px\",\r\n              borderRadius: \"10px\",\r\n              boxShadow: \"0 2px 8px rgba(0,0,0,0.15)\",\r\n            }}\r\n          >\r\n            <h2\r\n              style={{\r\n                fontSize: \"24px\",\r\n                fontWeight: \"700\",\r\n                marginBottom: \"14px\",\r\n                color: \"#e0c3fc\",\r\n                textShadow: \"0 0 4px rgba(255,255,255,0.3)\",\r\n              }}\r\n            >\r\n              RateMyProfessors Data\r\n            </h2>\r\n            <p>Rating: {rmpProf.avgRating?.toFixed(2) ?? \"N/A\"} / 5</p>\r\n            <p>Difficulty: {rmpProf.avgDifficulty?.toFixed(2) ?? \"N/A\"} / 5</p>\r\n            <p>\r\n              Would Take Again:{\" \"}\r\n              {rmpProf.wouldTakeAgainPercent != null\r\n                ? `${rmpProf.wouldTakeAgainPercent}%`\r\n                : \"N/A\"}\r\n            </p>\r\n            <p>\r\n              Number of Ratings:{\" \"}\r\n              {rmpProf.numRatings != null ? rmpProf.numRatings : \"N/A\"}\r\n            </p>\r\n          </section>\r\n        )\r\n      ) : (\r\n        <p\r\n          style={{\r\n            fontSize: \"16px\",\r\n            fontStyle: \"italic\",\r\n            textAlign: \"center\",\r\n            marginBottom: \"28px\",\r\n          }}\r\n        >\r\n          No RateMyProfessors data available.\r\n        </p>\r\n      )}\r\n\r\n      <h2\r\n        style={{\r\n          fontSize: \"26px\",\r\n          fontWeight: \"700\",\r\n          marginBottom: \"12px\",\r\n          borderBottom: \"2px solid #a78bfa\",\r\n          paddingBottom: \"8px\",\r\n          color: \"#ddd6fe\",\r\n        }}\r\n      >\r\n        Classes Taught\r\n      </h2>\r\n      <ul\r\n        style={{\r\n          listStyle: \"disc inside\",\r\n          fontSize: \"18px\",\r\n          lineHeight: \"1.6\",\r\n          paddingLeft: \"10px\",\r\n          color: \"#e0d7ff\",\r\n        }}\r\n      >\r\n        {classList.length > 0 ? (\r\n          classList.map(({ code, name, avggrade }) => (\r\n            <li key={code} style={{ marginBottom: \"8px\" }}>\r\n              <strong>{code}:</strong> {name} â€” GPA:{\" \"}\r\n              {avggrade?.toFixed(2) ?? \"N/A\"}\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <li>No classes found for this professor.</li>\r\n        )}\r\n      </ul>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}