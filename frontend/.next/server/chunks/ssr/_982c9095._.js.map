{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lkn4/OneDrive%20-%20University%20of%20Illinois%20-%20Urbana/Desktop/campus-dashboard/frontend/pages/Suggestions.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useMemo } from \"react\";\r\nimport Link from \"next/link\";\r\nimport classData from \"../data/raw/classes.json\";\r\nimport mergedProfessors from \"../data/processed/merged_professors.json\";\r\n\r\n\r\n\r\n// Normalize once\r\nconst normalize = (name: string) =>\r\n  name.toLowerCase().replace(/\\./g, \"\").replace(/\\s+/g, \" \").trim();\r\n\r\nconst rmpProfSet = new Set(\r\n  mergedProfessors.map(\r\n    (p) => `${normalize(p.lastName)}, ${normalize(p.firstName)}`\r\n  )\r\n);\r\n\r\nexport default function SuggestionsWithRMPFilter() {\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [professor, setProfessor] = useState(\"\");\r\n  const [maxDifficulty, setMaxDifficulty] = useState(\"\");\r\n  const [onlyWithRMP, setOnlyWithRMP] = useState(false);\r\n\r\n  // Trigger search on first user input\r\n  const handleInputChange = (\r\n    setter: React.Dispatch<React.SetStateAction<string>>\r\n  ) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setter(e.target.value);\r\n  };\r\n\r\n  const handleCheckboxChange = () => {\r\n    setOnlyWithRMP((prev) => !prev);\r\n  };\r\n\r\n  const filteredClasses = useMemo(() => {\r\n    return classData.filter((cls) => {\r\n      const matchesDepartment =\r\n        department === \"\" ||\r\n        cls.subject.toLowerCase().includes(department.toLowerCase());\r\n\r\n      const matchesProfessor =\r\n        professor === \"\" ||\r\n        cls.professors.some((p) =>\r\n          p.prof.toLowerCase().includes(professor.toLowerCase())\r\n        );\r\n\r\n      const avgDifficulty = cls.professors.length\r\n        ? cls.professors.reduce((sum, p) => sum + p.avggrade, 0) / cls.professors.length\r\n        : 0;\r\n\r\n      const matchesDifficulty =\r\n        maxDifficulty === \"\" || avgDifficulty <= parseFloat(maxDifficulty);\r\n\r\n      const hasRMP = cls.professors.some((p) =>\r\n        rmpProfSet.has(normalize(p.prof))\r\n      );\r\n\r\n      return (\r\n        matchesDepartment &&\r\n        matchesProfessor &&\r\n        matchesDifficulty &&\r\n        (!onlyWithRMP || hasRMP)\r\n      );\r\n    });\r\n  }, [department, professor, maxDifficulty, onlyWithRMP]);\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", maxWidth: \"800px\", margin: \"0 auto\" }}>\r\n      <h1 style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>Class Suggestions</h1>\r\n\r\n      {/* Filters */}\r\n      <div style={{ margin: \"20px 0\", display: \"flex\", flexDirection: \"column\", gap: \"10px\" }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Filter by Department (e.g. CS)\"\r\n          value={department}\r\n          onChange={handleInputChange(setDepartment)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Filter by Professor (e.g. Challen)\"\r\n          value={professor}\r\n          onChange={handleInputChange(setProfessor)}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Max Difficulty, 1 (easy) - 5 (difficult)\"\r\n          value={maxDifficulty}\r\n          onChange={handleInputChange(setMaxDifficulty)}\r\n        />\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={onlyWithRMP}\r\n            onChange={handleCheckboxChange}\r\n          />{\" \"}\r\n          Only show classes with RMP data\r\n        </label>\r\n      </div>\r\n\r\n      {/* Results */}\r\n      {(department.trim() !== \"\" || professor.trim() !== \"\") && (\r\n        <>\r\n          {filteredClasses.length === 0 ? (\r\n            <p>No classes match your filters.</p>\r\n          ) : (\r\n            <ul style={{ listStyle: \"none\", paddingLeft: 0 }}>\r\n              {filteredClasses.map((cls, i) => {\r\n                const slug = cls.code.toLowerCase().replace(/\\s+/g, \"\");\r\n                const avgGpa =\r\n                  cls.professors.length > 0\r\n                    ? (\r\n                        cls.professors.reduce((sum, p) => sum + p.avggrade, 0) /\r\n                        cls.professors.length\r\n                      ).toFixed(2)\r\n                    : \"N/A\";\r\n\r\n                return (\r\n                  <li\r\n                    key={i}\r\n                    style={{\r\n                      marginBottom: \"20px\",\r\n                      borderBottom: \"1px solid #ccc\",\r\n                      paddingBottom: \"10px\",\r\n                    }}\r\n                  >\r\n                    <h2 style={{ fontSize: \"18px\", fontWeight: \"bold\" }}>\r\n                      <Link href={`/classes/${slug}`}>\r\n                        {cls.code} — {cls.name}\r\n                      </Link>\r\n                    </h2>\r\n                    <p>Department: {cls.subject}</p>\r\n                    <p>Avg GPA: {avgGpa}</p>\r\n                    <p>Professors:</p>\r\n                    <ul>\r\n                      {cls.professors.map((p, j) => (\r\n                        <li key={j}>\r\n                          {p.prof} — GPA: {p.avggrade.toFixed(2)}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}